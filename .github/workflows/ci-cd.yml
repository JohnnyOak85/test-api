name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set execute permissions on scripts
        run: chmod +x .github/scripts/*.sh

      - name: Install Node.js
        run: .github/scripts/install-node.sh

      - name: Install npm
        run: sudo npm install -g npm

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build

    env:
      EC2_INSTANCE: ec2-user@ec2-3-253-33-5.eu-west-1.compute.amazonaws.com
      HOST: ${{ HOST }}
      PORT: ${{ PORT }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Create security-key.pem
        run: echo "$SSH_PRIVATE_KEY" > security-key.pem && chmod 600 security-key.pem

      - name: Set execute permissions on scripts
        run: chmod +x .github/scripts/*.sh

      - name: Set Permissions on EC2
        run: .github/scripts/set-permissions.sh
        env:
          EC2_INSTANCE: ${{ env.EC2_INSTANCE }}

      - name: Copy Service File
        run: .github/scripts/copy-service.sh
        env:
          GITHUB_WORKSPACE: $GITHUB_WORKSPACE
          EC2_INSTANCE: ${{ env.EC2_INSTANCE }}

      - name: Deploy to EC2
        run: .github/scripts/deploy-to-ec2.sh
        env:
          EC2_INSTANCE: ${{ env.EC2_INSTANCE }}

      - name: Reload systemd
        run: .github/scripts/reload-systemd.sh
        env:
          EC2_INSTANCE: ${{ env.EC2_INSTANCE }}

      - name: Manage Service
        run: .github/scripts/manage-service.sh
        env:
          EC2_INSTANCE: ${{ env.EC2_INSTANCE }}

      - name: Cleanup security-key.pem
        run: rm security-key.pem
