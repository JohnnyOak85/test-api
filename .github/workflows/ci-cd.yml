name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Debug SSH Private Key
        run: echo "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Copy Service File
        run: scp -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} test-api.service ec2-user@ec2-3-253-33-5.eu-west-1.compute.amazonaws.com:/etc/systemd/system/

      - name: Create User and Group
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ec2-user@ec2-3-253-33-5.eu-west-1.compute.amazonaws.com '
            APP_USER=testapiuser
            APP_GROUP=testapigroup

            # Check if user exists; create if not
            if ! id -u $APP_USER > /dev/null 2>&1; then
                sudo useradd -m -s /bin/bash $APP_USER
            fi

            # Check if group exists; create if not
            if ! getent group $APP_GROUP > /dev/null 2>&1; then
                sudo groupadd $APP_GROUP
            fi

            # Add user to the group
            sudo usermod -aG $APP_GROUP $APP_USER

      - name: Deploy to EC2
        run: |
          echo "Starting deployment..."
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ec2-user@ec2-3-253-33-5.eu-west-1.compute.amazonaws.com 'cd test-api && git pull && npm install && pm2 restart test-api'
          echo "Deployment completed."
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
